<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.ogm</groupId>
        <artifactId>hibernate-ogm-parent</artifactId>
        <version>5.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>hibernate-ogm-integrationtest</artifactId>
    <name>Hibernate OGM Integration and performance Tests</name>
    <description>Hibernate OGM integration and performance tests</description>

    <properties>
        <version.org.wildfly.arquillian>1.0.2.Final</version.org.wildfly.arquillian>
        <jboss.home>${project.build.directory}/wildfly-${version.wildfly}</jboss.home>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Skipping enforcer plug-in as AS/Arquillian cause several dependency
            convergence issues -->
        <enforcer.skip>true</enforcer.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Imports compatible versions for each Arquillian module -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillianVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>run-embedded-wildfly-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <includes>
                                <include>**/neo4j/embedded/*IT.java</include>
                                <include>**/mongodb/*IT.java</include>
                                <include>**/ehcache/*IT.java</include>
                                <include>**/infinispan/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>build-test-jar</id>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                            <configuration>
                                <archive>
                                    <manifest>
                                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    </manifest>
                                </archive>
                                <excludes>
                                    <exclude>**/hibernate.properties</exclude>
                                    <exclude>**/log4j.properties</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>unpack</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>org.wildfly</groupId>
                                        <artifactId>wildfly-dist</artifactId>
                                        <version>${version.wildfly}</version>
                                        <type>zip</type>
                                        <overWrite>false</overWrite>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                    </artifactItem>
                                    <artifactItem>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>hibernate-ogm-modules-wildfly10</artifactId>
                                        <version>${project.version}</version>
                                        <type>zip</type>
                                        <overWrite>false</overWrite>
                                        <outputDirectory>${jboss.home}/modules</outputDirectory>
                                    </artifactItem>
                                    <artifactItem>
                                        <groupId>org.infinispan</groupId>
                                        <artifactId>infinispan-as-embedded-modules</artifactId>
                                        <version>${infinispanVersion}</version>
                                        <type>zip</type>
                                        <overWrite>false</overWrite>
                                        <outputDirectory>${jboss.home}/modules</outputDirectory>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <!-- Backends -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-ogm-neo4j</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-ogm-couchdb</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-ogm-mongodb</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-ogm-redis</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>${version.org.wildfly.arquillian}</version>
            <scope>test</scope>
            <exclusions>
                <!-- Pulled in transitively; Neither available on 
                    Windows nor on JDK 9 -->
                <exclusion>
                    <groupId>sun.jdk</groupId>
                    <artifactId>jconsole</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-orm</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>run-couchdb-wildfly-tests</id>
            <!-- To run the tests you need to define the 
                environment property: COUCHDB_HOSTNAME -->
            <activation>
                <property>
                    <name>env.COUCHDB_HOSTNAME</name>
                </property>
            </activation>
            <build>
                <plugins>
                   <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>couchdb-integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                    <includes>
                                        <include>**/couchdb/*IT.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>run-redis-wildfly-tests</id>
            <!-- To run the tests you need to define the
                environment property: REDIS_HOSTNAME -->
            <activation>
                <property>
                    <name>env.REDIS_HOSTNAME</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>redis-integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                    <includes>
                                        <include>**/redis/*IT.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>run-cassandra-wildfly-tests</id>
            <!-- To run the tests you need to define the
                environment property: CASSANDRA_HOSTNAME -->
            <activation>
                <property>
                    <name>env.CASSANDRA_HOSTNAME</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>cassandra-integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                    <includes>
                                        <include>**/cassandra/*IT.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>run-neo4j-wildfly-tests</id>
            <!-- To run the tests you need to define the
                environment properties NEO4J_HOSTNAME, NEO4J_USERNAME and NEO4J_PASSWORD -->
            <activation>
                <property>
                    <name>env.NEO4J_HOSTNAME</name>
                </property>
            </activation>
            <build>
                <plugins>
                   <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>neo4j-integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                    <includes>
                                        <include>**/neo4j/remote/*IT.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>embedded-mongodb</id>
            <activation>
                <property>
                    <name>!useExternalMongoDb</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-mongodb-directories</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                    println "[INFO] ------------------------------------------------------------------------"
                                    println "[INFO] MONGO DB BUILD INFO                                                     "
                                    println "[INFO] ------------------------------------------------------------------------"
                                    println "[INFO] Extracting MongoDB distribution to " + project.properties['embeddedMongoDbTempDir'] + " and        "
                                    println "[INFO] launching MongoDB process on port " + project.properties['embeddedMongoDbPort'] + ". The properties"
                                    println "[INFO] 'embeddedMongoDbTempDir' and 'embeddedMongoDbPort' can be used to       "
                                    println "[INFO] specify another directory and/or port like this:                        "
                                    println "[INFO]                                                                         "
                                    println "[INFO]     mvn test -DembeddedMongoDbTempDir=%dir% -DembeddedMongoDbPort=%port%"
                                    println "[INFO]                                                                         "
                                    println "[INFO] To use an external Mongo DB instance instead, specify the               "
                                    println "[INFO] 'useExternalMongoDb' property:                                          "
                                    println "[INFO]                                                                         "
                                    println "[INFO]     mvn test -DuseExternalMongoDb                                       "
                                    println "[INFO]                                                                         "
                                    println "[INFO] In this case, host and port are retrieved from the environment          "
                                    println "[INFO] variables MONGODB_HOSTNAME and MONGODB_PORT, respectively.              "
                                    println "[INFO] ------------------------------------------------------------------------"

                                    def tempDir = new File(project.properties['embeddedMongoDbTempDir'])
                                    ant.delete(dir : tempDir)
                                    ant.mkdir(dir : tempDir)

                                    def logDir = new File(project.properties['embeddedMongoDbLogDir'])
                                    ant.delete(dir : logDir)
                                    ant.mkdir(dir : logDir)

                                    System.setProperty( "de.flapdoodle.embed.io.tmpdir", project.properties['embeddedMongoDbTempDir'] )
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <MONGODB_PORT>${embeddedMongoDbPort}</MONGODB_PORT>
                                <MONGODB_HOSTNAME>${embeddedMongoDbBindIp}</MONGODB_HOSTNAME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.github.joelittlejohn.embedmongo</groupId>
                        <artifactId>embedmongo-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-embedded-mongodb</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-embedded-mongodb</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
