<?xml version="1.0"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2010-2011, Red Hat, Inc. and/or its affiliates or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat, Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->

<!--
    @author Steve Ebersole
    @author Hardy Ferentschik
    @author Emmanuel Bernard <emmanuel@hibernate.org>
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.hibernate.ogm</groupId>
        <artifactId>hibernate-ogm-parent</artifactId>
        <version>3.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    
    <artifactId>hibernate-ogm-core</artifactId>
    <packaging>jar</packaging>

    <name>Hibernate Object Grid Mapper</name>
    <description>Persist data in a grid rather than a relational database</description>

    <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-orm</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-infinispan</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-lucene-directory</artifactId>
            <optional>true</optional>
        </dependency>
        
        <!-- test dependencies -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-testing</artifactId>
            <!-- <scope>test</scope> TODO fix this -->
        </dependency>
<!--        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency> -->
        <!-- this is optional on core :( and needed for testing -->
        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.jbossts</groupId>
            <artifactId>jbossjta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                   <forkMode>once</forkMode>
                    <excludes>
                        <!-- Skip a long-running test of a prototype class -->
                        <exclude>**/ClusteredConcurrentTimestampRegionTestCase.java</exclude>
                    </excludes>
                     <!-- 
                          java.net.preferIPv4Stack :
                             There are problems with multicast and IPv6 on some
                          OS/JDK combos, so we tell Java to use IPv4. If you
                          have problems with multicast when running the tests
                          you can try setting this to 'false', although typically
                          that won't be helpful.
                          
                          jgroups.ping.timeout=500 :
                             Tell JGroups to only wait a short time for PING 
                          responses before determining coordinator. Speeds cluster
                          formation during integration tests. (This is too
                          low a value for a real system; only use for tests.)
                          
                          jgroups.udp.enable_bundling=false :
                             Disable the JGroups message bundling feature
                          to speed tests and avoid FLUSH issue
                           -->
                    <argLine>-Djgroups.bind_addr=${jgroups.bind_addr} -Dhibernate.test.validatefailureexpected=true -Djava.net.preferIPv4Stack=true -Djgroups.ping.timeout=500 -Djgroups.ping.num_initial_members=1 -Djgroups.udp.enable_bundling=false</argLine>
                    <skipExec>${skipUnitTests}</skipExec>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <tags>
                        <tag>
                            <name>experimental</name>
                            <placement>a</placement>
                            <head>Experimental</head>
                        </tag>
                    </tags>
                    <docfilessubdirs>true</docfilessubdirs>
                    <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
                    <links>
                        <link>http://download.oracle.com/javase/6/docs/api/</link>
                        <link>http://docs.jboss.org/hibernate/stable/core/javadocs/</link>
                        <link>http://docs.jboss.org/hibernate/stable/search/api/</link>
                        <link>http://lucene.apache.org/java/3_4_0/api/all</link>
                    </links>
                    <packagesheader>Hibernate OGM Packages</packagesheader>
                    <doctitle>Hibernate OGM ${project.version}</doctitle>
                    <windowtitle>Hibernate OGM ${project.version}</windowtitle>
                    <bottom>
                        <![CDATA[Copyright &copy; ${project.inceptionYear}-{currentYear} <a href="http://redhat.com">Red Hat Middleware, LLC</a>, Emmanuel Bernard and various contributors.  All Rights Reserved]]></bottom>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jboss.maven.plugins</groupId>
                <artifactId>maven-injection-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>bytecode</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <bytecodeInjections>
                        <bytecodeInjection>
                            <expression>${project.version}</expression>
                            <targetMembers>
                                <methodBodyReturn>
                                    <className>org.hibernate.ogm.cfg.impl.Version</className>
                                    <methodName>getVersionString</methodName>
                                </methodBodyReturn>
                            </targetMembers>
                        </bytecodeInjection>
                    </bytecodeInjections>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <skipUnitTests>false</skipUnitTests>
            </properties>
        </profile>
     </profiles>
</project>
