<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2011 Red Hat Inc. and/or its affiliates and other contributors
  ~ as indicated by the @authors tag. All rights reserved.
  ~ See the copyright.txt in the distribution for a
  ~ full listing of individual contributors.
  ~
  ~ This copyrighted material is made available to anyone wishing to use,
  ~ modify, copy, or redistribute it subject to the terms and conditions
  ~ of the GNU Lesser General Public License, v. 2.1.
  ~ This program is distributed in the hope that it will be useful, but WITHOUT A
  ~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  ~ PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  ~ You should have received a copy of the GNU Lesser General Public License,
  ~ v.2.1 along with this distribution; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  ~ MA  02110-1301, USA.
  -->
<infinispan
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="urn:infinispan:config:5.1 http://www.infinispan.org/schemas/infinispan-config-5.1.xsd"
    xmlns="urn:infinispan:config:5.1">

    <!-- *************************** -->
    <!-- System-wide global settings -->
    <!-- *************************** -->

    <global>

        <!-- Duplicate domains are allowed so that multiple deployments with default configuration 
            of Hibernate OGM applications work - a better solution would be to use JNDI to share 
            the CacheManager across applications, or use a custom configuration.
            Only enable if needed - it has a performance impact.
        <globalJmxStatistics
            enabled="true"
            cacheManagerName="HibernateOGM"
            allowDuplicateDomains="true" /> -->

        <!-- If the transport is omitted, there is no way to create distributed or clustered 
            caches. There is no added cost to defining a transport but not creating a cache that uses one, 
            since the transport is created and initialized lazily. -->
        <transport
            clusterName="HibernateOGM-Infinispan-cluster"
            distributedSyncTimeout="50000"
            strictPeerToPeer="false">
            <!-- This is the default TCP based configuration, bundled in Infinispan core jar -->
            <properties>
                <property name="configurationFile" value="jgroups-tcp.xml" />
            </properties>
        </transport>

        <!-- Used to register JVM shutdown hooks. hookBehavior: DEFAULT, REGISTER, DONT_REGISTER. 
            Hibernate OGM takes care to stop the CacheManager so registering is not needed -->
        <shutdown
            hookBehavior="DONT_REGISTER" />

    </global>

    <!-- *************************** -->
    <!--   Default cache settings    -->
    <!-- *************************** -->

    <default>

        <!-- This element specifies that the cache is clustered. modes supported: distribution 
            (d), replication (r) or invalidation (i). Don't use invalidation as OGM storage! -->
        <clustering
            mode="distribution">

            <!-- Force loading all data at startup: to be enabled when using replication 
            <stateRetrieval
                timeout="20000"
                fetchInMemoryState="true"
                alwaysProvideInMemoryState="true" />  -->

            <!-- Network calls are synchronous by default -->
            <sync
                replTimeout="25000" />

            <!-- Keep L1 disabled until issues have been fixed -->
            <l1 enabled="false" />

        </clustering>

        <transaction
            transactionMode="TRANSACTIONAL"
            transactionManagerLookupClass="org.infinispan.transaction.lookup.JBossStandaloneJTAManagerLookup">
        </transaction>

        <eviction
            strategy="NONE" />

        <expiration
            wakeUpInterval="-1"
            reaperEnabled="false" />

    </default>

    <!-- **************************************************************** -->
    <!-- Individually configured "named" caches.                          -->
    <!--                                                                  -->
    <!-- Technically not necessary, use it as template to create          -->
    <!-- your own configuration.                                          -->
    <!--                                                                  -->
    <!-- Current settings could lead to OutOfMemory exception as a        -->
    <!-- CacheStore should be enabled.                                    -->
    <!-- **************************************************************** -->

    <!-- *************************************** -->
    <!--     Cache to store the OGM entities     -->
    <!-- *************************************** -->
    <namedCache
        name="ENTITIES">
    </namedCache>

    <!-- *********************************************** -->
    <!--   Cache to store the relations across entities  -->
    <!-- *********************************************** -->
    <namedCache
        name="ASSOCIATIONS">
    </namedCache>

    <!-- ***************************** -->
    <!--   Cache to store identifiers  -->
    <!-- ***************************** -->
    <namedCache
        name="IDENTIFIERS">
    </namedCache>

</infinispan>
